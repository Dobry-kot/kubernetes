---
- name: DOWNLOAD BASIC BINARY K8S-COMPONENTS.
  get_url:
    url: "{{ k8s_component_bin.url }}"
    dest: "{{ k8s_component_bin.path }}"
    mode: 0775
  loop:
    - url: https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_version }}/bin/linux/amd64/kube-apiserver
      path: /usr/bin/
  loop_control:
      loop_var: k8s_component_bin

- name: NEW <{{ component }}> CA.
  vars:
    component: front-proxy
  block:
    - name: CREATE <{{ component }}> CA.
      vars:
        csr:
          CN: system:kube-apiserver-front-proxy-ca
          names:
            - O: "system:front-proxy-ca"
      import_role:
        name: k8s
        tasks_from: k8s-certificates-ca-create.yaml
      delegate_to: "{{ groups.masters[0] }}"

    - name: DELIVERY CA.
      import_role:
        name: k8s
        tasks_from: k8s-certificates-ca-delivery.yaml

- name: CREATE CERT <front-proxy> CLIENT.
  vars:
    csr:
      CN: "system:kube-apiserver-front-proxy-client"
      names:
        - O: "system:masters"
    profile: client
    ca: front-proxy
  import_role:
    name: k8s
    tasks_from: k8s-certificate-template.yaml

- name: CREATE CERT <etcd> CLIENT.
  vars:
    csr:
      CN: "system:kube-apiserver-etcd-client"
      names:
        - O: "system:masters"
    profile: client
    ca: etcd
  import_role:
    name: k8s
    tasks_from: k8s-certificate-template.yaml

- name: CREATE CERT <kube-apiserver> SERVER.
  vars:
    hosts_list: 
      - "127.0.0.1"
      - "127.0.1.1"
      - "127.0.1.6"
      - "localhost"
      - "kubernetes.default.svc.cluster.local"
      - "{{ ansible_default_ipv4.address }}"
      - "{{ cluster_api_ip }}"
      - "{{ external_api_ip }}"
      - "{{ inventory_hostname }}"
    csr:
      CN: "system:kube-apiserver-server"
      names:
        - O: "system:kube-apiserver"
      hosts: "{{ hosts_list + groups.masters }}"
    profile: server
    ca: root
  import_role:
    name: k8s
    tasks_from: k8s-certificate-template.yaml

- name: CREATE CERT <kubelet> CLIENT.
  vars:
    csr:
      CN: "system:kube-apiserver-kubelet-client"
      names:
        - O: "system:masters"
    profile: client
    ca: root
  import_role:
    name: k8s
    tasks_from: k8s-certificate-template.yaml

- name: COPY CONFIGS.
  ansible.builtin.template:
    src: "configs/kube-apiserver/{{ config_name }}"
    dest: /etc/kubernetes/{{ config_name.split('.j2')[0] }}
    owner: root
    group: root
    mode: '0775'
  loop: 
    - audit-policy.yaml.j2
    - egress-selector-configuration.yaml.j2
  loop_control:
      loop_var: config_name
  tags:
    - kube_apiserver_service_update

- name: ADD NEW SERVICES.
  vars:
    services_list:
      - kube-apiserver.service
  import_role:
    name: k8s
    tasks_from: k8s-service-create.yaml
  tags:
    - kube_apiserver_service_update