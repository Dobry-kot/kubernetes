---
- name: SETUP KUBEADM.
  vars:
    k8s_component: kubeadm
  block:
    - name: DOWNLOAD BASIC BINARY K8S-COMPONENTS.
      get_url:
        url: "{{ k8s_component_bin.url }}"
        dest: "{{ k8s_component_bin.path }}"
        mode: 0775
      loop:
        - url: "{{ kubeadm_build.bin.path }}/v{{ kubeadm_build.bin.version }}/bin/linux/{{ arch }}/{{ k8s_component }}"
          path: /usr/bin/
      loop_control:
          loop_var: k8s_component_bin

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ kubeadm_component_path }}"
        state: directory
        mode: '0775'
      loop:
        - "/etc/kubernetes/kubeadm/manifests"
      loop_control:
          loop_var: kubeadm_component_path

    - name: COPY CA CONTENT IN VAR. 
      ansible.builtin.slurp:
        src: "{{ pki_path_ca }}/root-ca.pem"
      register: ca_content
      delegate_to: "{{ groups.masters[0] }}"
      tags:
        - kubeadm_configs_update

    - name: LIST BASIC CONFIGS
      vars:
      set_fact:
        configs_in_copy:
          - name: manifests/cm:kubeadm-config.yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/cm:kubelet-config.yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/cm:cluster-info.yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/clusterrole:kubeadm:get-nodes.yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/role:kubeadm:bootstrap-signer-clusterinfo .yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/role:kubeadm:kubelet-config.yaml.j2
            folder: "{{ k8s_component }}"
          - name: manifests/role:kubeadm:nodes-kubeadm-config.yaml.j2
            folder: "{{ k8s_component }}"
      tags:
        - kubeadm_configs_update

    - name: COPY CONFIGS.
      vars:
        kubeconfig_cert: system:node:{{ inventory_hostname }}
      include_role:
        name: k8s
        tasks_from: k8s-copy-configs.yaml
        apply:
          tags:
            - kubeadm_configs_update
      tags:
        - kubeadm_configs_update

    - name: APPLY MANIFESTS.
      kubernetes.core.k8s:
        state: present
        template:
          - path: 'configs/{{k8s_component}}/{{ k8s_manifest.name }}'
        kubeconfig: "{{ default_path }}/kube-apiserver/kubeconfig"
      loop: "{{ configs_in_copy }}"
      loop_control:
        loop_var: k8s_manifest
      delegate_to: "{{ groups.masters[0] }}"
      register: status_manifests
      when: inventory_hostname == groups.masters[0]
