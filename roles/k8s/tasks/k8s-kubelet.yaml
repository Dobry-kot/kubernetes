---
- name: SETUP KUBE-SCHEDULER.
  vars:
    k8s_component: kubelet
  block:
    - name: DOWNLOAD BASIC BINARY K8S-COMPONENTS.
      get_url:
        url: "{{ k8s_component_bin.url }}"
        dest: "{{ k8s_component_bin.path }}"
        mode: 0775
      loop:
        - url: https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_version }}/bin/linux/amd64/{{ k8s_component }}
          path: /usr/bin/
      loop_control:
          loop_var: k8s_component_bin

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ k8s_component_path }}"
        state: directory
        mode: '0775'
      loop:
        - "{{ default_path_kubelet }}"
        - "{{ pki_path_certs }}/{{ k8s_component }}"
      loop_control:
          loop_var: k8s_component_path

    - name: SSL BLOCK.
      block:
        - name: CREATE CERT <{{ k8s_component }}> CLIENT.
          vars:
            csr:
              CN: "system:node:{{ inventory_hostname }}"
              names:
                - O: "system:nodes"
            profile: client
            ca: root
          import_role:
            name: k8s
            tasks_from: k8s-certificate-template.yaml
      tags:
        - ssl_kubelet
        
    - name: COPY CONFIGS.
      vars:
        kubeconfig_cert: system:node:{{ inventory_hostname }}
      ansible.builtin.template:
        src: "configs/{{ config.folder | default('') }}/{{ config.name }}"
        dest: "{{ config.path }}/{{ config.name.split('.j2')[0] }}"
        owner: root
        group: root
        mode: '0775'
      loop:
        - name: kubeconfig.j2
          path: /var/lib/kubelet
        - name: config.j2
          path: /var/lib/kubelet
        - name: config.yaml.j2
          path: /var/lib/kubelet
          folder: "{{ k8s_component }}"
        - name: service-args.j2
          path: /var/lib/kubelet
          folder: "{{ k8s_component }}"
      loop_control:
          loop_var: config
      tags:
        - kubelet_service_update

    - name: ADD NEW SERVICES.
      vars:
        services_list:
          - "{{ k8s_component }}.service"
      import_role:
        name: k8s
        tasks_from: k8s-service-create.yaml
      tags:
        - kubelet_service_update