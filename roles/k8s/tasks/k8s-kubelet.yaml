---
- name: SETUP KUBE-SCHEDULER.
  vars:
    k8s_component: kubelet
  block:
    - name: DOWNLOAD BASIC BINARY K8S-COMPONENTS.
      get_url:
        url: "{{ k8s_component_bin.url }}"
        dest: "{{ k8s_component_bin.path }}"
        mode: 0775
      loop:
        - url: "{{ kubelet_build.bin.path }}/v{{ kubelet_build.bin.version }}/bin/linux/{{ arch }}/{{ k8s_component }}"
          path: /usr/bin/
      loop_control:
          loop_var: k8s_component_bin

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ k8s_component_path }}"
        state: directory
        mode: '0775'
      loop:
        - "{{ default_path_kubelet }}"
        - "{{ pki_path_certs }}/{{ k8s_component }}"
        - "{{ static_pod_path }}"
      loop_control:
          loop_var: k8s_component_path

    - name: SSL BLOCK.
      block:
        - name: CREATE CERT <{{ k8s_component }}> CLIENT.
          vars:
            csr:
              CN: "system:node:{{ inventory_hostname }}"
              names:
                - O: "system:nodes"
            profile: client
            ca: root
          include_role:
            name: k8s
            tasks_from: k8s-certificate-template.yaml
            apply:
              tags:
                - kubelet_ssl
      tags:
        - kubelet_ssl
        
    - name: LIST BASIC CONFIGS
      vars:
      set_fact:
        configs_in_copy:
        - name: kubeconfig.j2
          path: /var/lib/
        - name: config.j2
          path: /var/lib/
        - name: config.yaml.j2
          path: /var/lib/
          folder: "{{ k8s_component }}"
        - name: service-args.j2
          path: /var/lib/
          folder: "{{ k8s_component }}"
      tags:
        - kubelet_configs_update

    - name: COPY CONFIGS.
      vars:
        kubeconfig_cert: system:node:{{ inventory_hostname }}
      include_role:
        name: k8s
        tasks_from: k8s-copy-configs.yaml
        apply:
          tags:
            - kubelet_configs_update
      tags:
        - kubelet_configs_update

    - name: ADD NEW SERVICES.
      vars:
        services_list:
          - "{{ k8s_component }}.service"
      import_role:
        name: k8s
        tasks_from: k8s-service-create.yaml
      tags:
        - kubelet_service_update