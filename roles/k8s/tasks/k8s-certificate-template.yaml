---
- name: BLOCK NEW CERT.
  vars:
    component: "{{ (component_local | default(k8s_component)) | default('root') }}"
    basic_cert_name: "{{ csr.CN }}"
    basic_cert_path: "{{ default_path_pki_certs }}"
    cert_name: "{{ custom_cert_name | default(basic_cert_name) }}"
    cert_path: "{{ custom_cert_path | default(default_path_pki_certs) }}"
    component_plug: "{% if custom_cert_path is defined %}{% else %}{{ component }}{% endif %}"
  block:
    - name: Find out what the remote machine's mounts are
      slurp:
        src: "{{ default_path_pki_certs }}/configs/{{ cert_name }}.json"
      register: certs_check_summ
      failed_when: false

    - name: CREATE CSR <{{ csr.CN }}>.
      vars:
        new_csr: "{{ global.ca_csr | combine(csr) | to_json }}"
      ansible.builtin.copy:
        content: "{{ new_csr }}"
        dest: "{{ default_path_pki_certs }}/configs/{{ cert_name }}.json"
      register: csr_status
      changed_when: certs_check_summ.changed != false or 
                    certs_check_summ.content | default(false) != new_csr | b64encode

    - name: CREATE CERT <{{ csr.CN }}>. 
      vars:
        ca_prefix: "{% if ca is defined %}{{ ca }}-{%else%}{% endif %}"
        ca_folder: "{{ ca_prefix.strip('-') }}"
      shell: >
        cfssl gencert \
        -ca={{ default_path_pki_ca }}/{{ ca_prefix }}ca.pem \
        -ca-key={{ default_path_pki_ca }}/{{ ca_prefix }}ca-key.pem \
        -config={{ default_path_pki_certs }}/configs/ca-config.json \
        -profile={{ profile }} \
        {{ default_path_pki_certs }}/configs/{{ cert_name }}.json | cfssljson -bare {{ cert_path }}/{{ component_plug }}/{{ cert_name }}
      when: csr_status.changed | bool
