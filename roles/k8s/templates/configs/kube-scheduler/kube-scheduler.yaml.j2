#jinja2: lstrip_blocks: "True"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-scheduler
    tier: control-plane
  name: kube-scheduler
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-scheduler
    args:
      - --authentication-kubeconfig=/etc/kubernetes/{{ k8s_component }}/kubeconfig 
      - --authorization-kubeconfig=/etc/kubernetes/{{ k8s_component }}/kubeconfig 
      - --kubeconfig=/etc/kubernetes/{{ k8s_component }}/kubeconfig 
      - --tls-cert-file={{ pki_path_certs }}/{{ k8s_component }}/system:kube-scheduler-server.pem 
      - --tls-private-key-file={{ pki_path_certs }}/{{ k8s_component }}/system:kube-scheduler-server-key.pem 
    {% for arg in kube_scheduler_args %}
      - {{ arg }}
    {% endfor %}
    image: {{ kube_scheduler_build.image.path }}:{{ kube_scheduler_build.image.version }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10259
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: kube-scheduler
    resources:
      requests:
        cpu: 100m
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10259
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/kubernetes/kube-scheduler
      name: k8s-kube-scheduler-configs
      readOnly: true
    - mountPath: /etc/kubernetes/pki/certs
      name: k8s-certs
      readOnly: true
    - mountPath: /etc/kubernetes/pki/ca
      name: k8s-ca
      readOnly: true
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /etc/kubernetes/kube-scheduler
      type: DirectoryOrCreate
    name: k8s-kube-scheduler-configs
  - hostPath:
      path: /etc/kubernetes/pki/certs
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /etc/kubernetes/pki/ca
      type: DirectoryOrCreate
    name: k8s-ca
status: {}
