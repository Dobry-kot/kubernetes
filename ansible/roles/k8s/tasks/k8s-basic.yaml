- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ k8s_component_path }}"
    state: directory
    mode: '0775'
  loop: "{{ basic_dirs }}"
  loop_control:
      loop_var: k8s_component_path
  tags:
    - update_dirs

- name: DOWNLOAD <cfssl>.
  get_url:
    url: "{{ k8s_cp_component_bin.url }}"
    dest: "{{ k8s_cp_component_bin.path }}"
    mode: 0775
  loop:
    - url: https://github.com/cloudflare/cfssl/releases/download/v{{ cfssl_version }}/cfssl_{{ cfssl_version }}_linux_amd64
      path: /usr/bin/cfssl
    - url: https://github.com/cloudflare/cfssl/releases/download/v{{ cfssl_version }}/cfssljson_{{ cfssl_version }}_linux_amd64
      path: /usr/bin/cfssljson
    - url: https://storage.yandexcloud.net/m.images/key-keeper?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=YCAJEhOlYpv1GRY7hghCojNX5%2F20220706%2Fru-central1%2Fs3%2Faws4_request&X-Amz-Date=20220706T102128Z&X-Amz-Expires=3600&X-Amz-Signature=918E3BF1282E21140FE1F8374D6E18143087A0C2FB1BB345C90910CE39FEBA6D&X-Amz-SignedHeaders=host
      path: /usr/bin/key-keeper
  loop_control:
      loop_var: k8s_cp_component_bin

- name: DOWNLOAD BASIC TAR K8S-CP-COMPONENTS.
  ansible.builtin.unarchive:
    src: "{{ k8s_component_tar.url }}"
    dest: "{{ k8s_component_tar.path }}"
    remote_src: yes
  loop:
    - url: "{{ build['etcd'].bin.path }}/v{{ build['etcd'].bin.version }}/etcd-v{{ build['etcd'].bin.version }}-linux-{{ arch }}.tar.gz"
      path: /tmp
  loop_control:
      loop_var: k8s_component_tar

- name: CREATE A REMOTE FILE WITH FOUND CONTENT. 
  ansible.builtin.copy:
    src: /tmp/etcd-v{{ build.etcd.bin.version }}-linux-{{ arch }}/{{ component_bin }}
    dest: "{{ default_path_bin }}/{{ component_bin }}"
    remote_src: true
    mode: 0775
  loop:
    - etcdctl
    - etcdutl
  loop_control:
    loop_var: component_bin

