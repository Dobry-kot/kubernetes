---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - name: kube-apiserver
    command:
    - kube-apiserver     
    args:
      - --etcd-servers=${etcd_advertise_client_urls}
      - --cloud-provider=external
      - --tls-cert-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-server.pem
      - --tls-private-key-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-server-key.pem
      - --client-ca-file=/etc/kubernetes/pki/ca/root-ca.pem
      - --etcd-cafile=/etc/kubernetes/pki/ca/etcd-ca.pem
      - --etcd-certfile=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-etcd-client.pem
      - --etcd-keyfile=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-etcd-client-key.pem
      - --kubelet-client-certificate=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-kubelet-client.pem
      - --kubelet-client-key=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-kubelet-client-key.pem
      - --proxy-client-cert-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-front-proxy-client.pem
      - --proxy-client-key-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-front-proxy-client-key.pem
      - --requestheader-client-ca-file=/etc/kubernetes/pki/ca/front-proxy-ca.pem
      - --service-account-key-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-sa.pub
      - --service-account-signing-key-file=/etc/kubernetes/pki/certs/kube-apiserver/system:kube-apiserver-sa.pem
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-timeout=5s
      - --v=2
      - --service-cluster-ip-range=29.64.0.0/16
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --requestheader-allowed-names=aggregator
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --bind-address=0.0.0.0
      - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,AlwaysPullImages,NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --runtime-config=api/all=true
      - --enable-aggregator-routing=true 
      - --api-audiences=system:konnectivity-server
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --audit-policy-file=/etc/kubernetes/kube-apiserver/audit-policy.yaml
      - --event-ttl=1h0m0s
      - --kubernetes-service-node-port=0
      - --master-service-namespace=default
      - --max-connection-bytes-per-sec=0
      - --max-requests-inflight=400
      - --min-request-timeout=1800
      - --profiling=false
      - --feature-gates=RotateKubeletServerCertificate=true
      - --anonymous-auth=true
      - --audit-log-maxage=30
      - --audit-log-maxbackup=10
      - --audit-log-maxsize=1000
      - --audit-log-mode=batch
    image: k8s.gcr.io/kube-apiserver:v1.23.5
            
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 250m
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: 6443
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /livez
        port: 6443
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/ca-certificates
      name: etc-ca-certificates
      readOnly: true
    - mountPath: /etc/kubernetes/pki/certs
      name: k8s-certs
      readOnly: true
    - mountPath: /etc/kubernetes/pki/ca
      name: k8s-ca
      readOnly: true
    - mountPath: /etc/kubernetes/kube-apiserver
      name: k8s-kube-apiserver-configs
      readOnly: true
    - mountPath: /usr/local/share/ca-certificates
      name: usr-local-share-ca-certificates
      readOnly: true
    - mountPath: /usr/share/ca-certificates
      name: usr-share-ca-certificates
      readOnly: true
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /etc/ca-certificates
      type: DirectoryOrCreate
    name: etc-ca-certificates
  - hostPath:
      path: /etc/kubernetes/pki/certs
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: /etc/kubernetes/pki/ca
      type: DirectoryOrCreate
    name: k8s-ca
  - hostPath:
      path: /etc/kubernetes/kube-apiserver
      type: DirectoryOrCreate
    name: k8s-kube-apiserver-configs
  - hostPath:
      path: /usr/local/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-local-share-ca-certificates
  - hostPath:
      path: /usr/share/ca-certificates
      type: DirectoryOrCreate
    name: usr-share-ca-certificates
status: {}